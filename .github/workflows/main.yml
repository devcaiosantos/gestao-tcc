name: Deploy to Server

on:
  workflow_dispatch:  # Permite iniciar o workflow manualmente
    inputs:
      branch:
        description: 'Branch para o deploy'
        required: true
        default: 'main'                     

jobs:
  # Job para build do backend
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Recriar .env.production
        run: |
          echo "${{ secrets.ENV_BACKEND }}" > backend/.env.production

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Autenticar no Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push backend Docker image
        run: |
          cd backend
          docker build -t gestao-tcc-backend:latest .
          docker tag gestao-tcc-backend:latest docker.io/${{ secrets.DOCKER_USERNAME }}/gestao-tcc-backend:latest
          docker push docker.io/${{ secrets.DOCKER_USERNAME }}/gestao-tcc-backend:latest

  # Job para deploy do backend
  deploy-backend:
    runs-on: ubuntu-latest
    needs: build-backend  # Aguarda o build do backend
    steps:
      - name: Autenticar no Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Deploy backend to server
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          port: ${{ secrets.SERVER_PORT }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            docker stop gestao-tcc-backend || true
            docker rm gestao-tcc-backend || true
            docker pull docker.io/${{ secrets.DOCKER_USERNAME }}/gestao-tcc-backend:latest
            docker run -d --name gestao-tcc-backend -p 5000:5000 docker.io/${{ secrets.DOCKER_USERNAME }}/gestao-tcc-backend:latest

  # Job para build do frontend
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Autenticar no Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push frontend Docker image
        run: |
          cd frontend
          docker build --build-arg NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }} -t gestao-tcc-frontend:latest .
          docker tag gestao-tcc-frontend:latest docker.io/${{ secrets.DOCKER_USERNAME }}/gestao-tcc-frontend:latest
          docker push docker.io/${{ secrets.DOCKER_USERNAME }}/gestao-tcc-frontend:latest

  # Job para deploy do frontend
  deploy-frontend:
    runs-on: ubuntu-latest
    needs: build-frontend  # Aguarda o build do frontend
    steps:
      - name: Autenticar no Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Deploy frontend to server
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          port: ${{ secrets.SERVER_PORT }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            docker stop gestao-tcc-frontend || true
            docker rm gestao-tcc-frontend || true
            docker pull docker.io/${{ secrets.DOCKER_USERNAME }}/gestao-tcc-frontend:latest
            docker run -d --name gestao-tcc-frontend -p 3000:3000 -e NEXT_PUBLIC_API_URL="http://200.134.21.91:5000/api" docker.io/${{ secrets.DOCKER_USERNAME }}/gestao-tcc-frontend:latest
